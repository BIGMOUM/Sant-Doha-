<?php

namespace SanteBundle\Repository;

/**
 * produitRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class produitRepository extends \Doctrine\ORM\EntityRepository
{
    public function searchByNom($s)
    {
        $q = $this->getEntityManager()
            ->createQuery("SELECT p FROM SanteBundle:produit p WHERE p.nom LIKE :n")->setParameter('n', '%' . $s . '%');

        return $q->getResult();

    }


    public function getMinPrice()
    {
        $query = $this->getEntityManager()
            ->createQuery("SELECT MIN(p.prix)as minPrice FROM SanteBundle:produit p ");
        return $query->getResult()[0]['minPrice'];
    }

    public function getMaxPrice()
    {
        $query = $this->getEntityManager()
            ->createQuery("SELECT MAX(p.prix)as maxPrice FROM SanteBundle:produit p ");
        return $query->getResult()[0]['maxPrice'];
    }

    public function getMinPriceParCategorie($cat)
    {
        $query = $this->getEntityManager()
            ->createQuery("SELECT MIN(p.prix)as minPrice FROM SanteBundle:produit p WHERE p.categorie = :c")
            ->setParameter('c', $cat);
        return $query->getResult()[0]['minPrice'];
    }

    public function getMaxPriceParCategorie($cat)
    {
        $query = $this->getEntityManager()
            ->createQuery("SELECT MAX(p.prix)as maxPrice FROM SanteBundle:produit p WHERE p.categorie = :c")
            ->setParameter('c', $cat);
        /*
         * C:\wamp64\www\SanteInt\src\SanteBundle\Repository\produitRepository.php:45:
        array (size=1)
  0 =>
    array (size=1)
      'maxPrice' => string '34.5' (length=4)
         */

        /*
         * var_dump($query->getResult());
         * die;
         */
        return $query->getResult()[0]['maxPrice'];
    }

    public function getByRange($min, $max)
    {


        $query = $this->getEntityManager()
            ->createQuery("SELECT p FROM SanteBundle:produit p WHERE p.prix BETWEEN  :minn AND :maxx")
            ->setParameter('minn', $min)
            ->setParameter('maxx', $max);

        return $query->getResult();
    }

    public function getByRangeAndCategory($min, $max, $cat)
    {


        $query = $this->getEntityManager()
            ->createQuery("SELECT p FROM SanteBundle:produit p WHERE p.prix BETWEEN  :minn AND :maxx and p.categorie = :c ")
            ->setParameter('minn', $min)
            ->setParameter('maxx', $max)
            ->setParameter('c', $cat);

        return $query->getResult();
    }

    public function searchByNameOrDescription($query)
    {
        return $this->getEntityManager()
            ->createQuery("SELECT p from SanteBundle:produit p WHERE p.nom like :q OR p.description 

              like :q ")
            ->setParameter('q', '%' . $query . '%')
            ->getResult();
    }

    public function getProduitByCategorie()
    {
        $qb = $this->getEntityManager()->createQuery("SELECT p.categorie, count(p) AS NB  FROM SanteBundle:produit p GROUP by 
          p.categorie");

        return $qb->getArrayResult();


    }

}
